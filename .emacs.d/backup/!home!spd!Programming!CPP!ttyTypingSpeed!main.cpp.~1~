#include "box.h"
#include "box_print.h"
#include "controls.h"
#include "cursor_controls.h"
#include "terminal.h"
#include <chrono>
#include <iostream>
#include <string>
#include <time.h>
#include <unistd.h>
int height = tty_height();
int width = tty_width();

int main(int argc, char *argv[]) {
  struct termios tp;
  tcgetattr(0, &tp);

  setbuf(stdout, NULL);
  sttyRaw(0);
  printf("\x1b[2J\x1b[3J"); // 2J==>clear visible region 3J==>clear scroll back
  mv_xy(0, 0);
  draw_rect(0);
  draw_footer();
  std::string str =
      "hello world hello world hello world hello world"
      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
      "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";
  b_printf(str, tty_width());
  // int state[str.length()] = {0};

  mv_xy(1, 1);

  auto start = std::chrono::system_clock::now(); // Declare the time variable
  bool init_time = true; // boolean to check if the time is initialized
  for (int i = 0; i < (int)str.size(); ++i) {
    bool initial_ =
        true; // boolean to check if character is typed correctly first time
    while (true) {
      if (getchar() == (int)str[i]) {
        if (init_time) {
          start = std::chrono::system_clock::now(); // Start time when the first
                                                    // character is typed
          init_time = false; // Set time to false after first key is pressed
        }
        if (initial_) { // Print the char in green by checking if it is the
                        // first time
          correct(str[i], true, i);
          break;
        } else {
          correct(str[i], false, i);
          break;
        }
      } else {
        sttyRestore(0, tp);
        exit(1);
        if (init_time) {
          start = std::chrono::system_clock::now(); // Start time when the first
                                                    // character is typed
          init_time = false; // Set time to false after first key is pressed
        }
        error(str[i]);
        initial_ = false;
        continue;
      }
    }
  }
  auto end = std::chrono::system_clock::now(); // End time when the last
                                               // character is typed
  std::chrono::duration<double> elapsed_seconds =
      end - start; // Calculate the time difference

  system("setterm --cursor off");
  printf("\033[5E");                   // Move to begnning of next line
  printf("\033[%dC", (width / 2) - 5); // Move 2 step right

  printf("Speed:\x1b[1;32m %0.2f%s",
         12.6 * (str.size() / elapsed_seconds.count()), __resetT_);
  printf("\033[1E"); // Move to begnning of next line
  printf("\033[%dC", (width / 2) - 11);
  std::cout << "Press Any key to continue" << std::endl;
  printf("\033[1E");

  system("setterm --cursor on");
  // To move cursor to end of terminal when program endds
label:
  mv_xy(width + 1, height + 1);
  printf("\n");
  mv_nextline();
  sttyRestore(0, tp);
  return 0;
}
