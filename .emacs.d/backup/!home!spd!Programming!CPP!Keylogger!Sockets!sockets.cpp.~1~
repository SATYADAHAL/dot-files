#include <arpa/inet.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <unistd.h>
#define PORT 8080

// Function declerations
int create_socket();
int set_port_family();
int set_ip_addr(const char *ipaddr);
int connect_to_server();
int send_data();
int close_connection();

int sock = 0, client_fd;
struct sockaddr_in serv_addr;

int create_socket() { // Create Socket
  if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
    printf("\n Socket creation error \n");
    return -1;
  }
  return 0;
}

int set_port_family(unsigned int port) { // Define some socket type and PORT
  serv_addr.sin_family = AF_INET;
  serv_addr.sin_port = htons(port);
  return 0;
}

int set_ip_addr(const char *ipaddr) { // Set the IP addres of the server
  if (inet_pton(AF_INET, ipaddr, &serv_addr.sin_addr) <= 0) {
    printf("\nInvalid address/ Address not supported \n");
    return -1;
  }
  return 0;
}

int connect_to_server() {
  if ((client_fd =
           connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)))

      < 0) {
    printf("\nConnection Failed \n");
    return -1;
  }
  return 0;
}

int send_data(int data) {
  char send_data[4];
  int index = 0, lenght = 0;
  char temp;
  if (data == 0) {
    if (!(send(sock, "0", 1, 0) == 0))
      return -1;
    return 0;
  }
  while (data > 0) { // Converting int into char* eg: 123 into "321"
    send_data[index] = (char)(data % 10 + 48);
    data = data / 10;
    index++;
  }
  lenght = index;
  index--;
  while (index != 0) { // Resversing the string
    temp = send_data[index];
    send_data[index] = send_data[lenght - index - 1];
    send_data[lenght - index - 1] = temp;
    index--;
  }
  if (send(sock, send_data, lenght, 0) == 0)
    return 0;
  return -1;
}

int close_connection() {
  if (close(client_fd) == 0)
    return 0;
  return -1;
}
