;; Object semanticdb-project-database-file-ee2708
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-ee2708"
  :tables
  (list
    (semanticdb-table "semanticdb-table-ee2668"
      :major-mode python-mode
      :tags 
        '( ("\"\"\" Importing other local .py file \"\"\"" code nil nil [1 39])
            ("proc" include nil nil [40 84])
            ("get_kbd_event" include nil nil [85 132])
            ("pid_using_kbd" include nil nil [133 176])
            ("all_process" variable nil nil [178 204])
            ("all_kdb" variable nil nil [220 251])
            ("pid_using_kbd" variable nil nil [280 332])
            ("for" code nil nil [360 412]))          
      :file "main.py"
      :pointmax 412
      :fsize 411
      :lastmodtime '(25423 58945 848583 750000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-ee2688"
      :major-mode python-mode
      :tags 
        '( ("pathlib" include nil nil [1 25])
            ("os" include nil nil [26 35])
            ("re" include nil nil [36 45])
            ("print_opened_fp" function (:arguments 
              ( ("pid" variable nil (reparse-symbol function_parameters) [67 70]))              ) nil [47 606])
            ("get_event_num" function nil nil [607 888])
            ("pid_info" function (:arguments 
              ( ("pid" variable nil (reparse-symbol function_parameters) [901 904]))              ) nil [888 1393])
            ("files" variable nil nil [1394 1419])
            ("final_lst" variable nil nil [1420 1432])
            ("pid_using_kbd" variable nil nil [1433 1449])
            ("if" code nil nil [1451 1518])
            ("key_event_files" variable nil nil [1518 1549])
            ("for" code nil nil [1551 1651])
            ("for" code nil nil [1652 2088])
            ("for" code nil nil [2088 2132]))          
      :file "detect.py"
      :pointmax 2132
      :fsize 2137
      :lastmodtime '(25422 3649 724617 718000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-ee26a8"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"Importing all the nesecessary modules\"\"\"" code nil nil [1 44])
            ("pathlib" include nil nil [45 69])
            ("os" include nil nil [70 79])
            ("get_pid_using_kbd" function
               (:documentation "This function checks if processes are using keyboard event

    Args:
        all_pids: List of process ids
        array_of_keyboard: List of event number of attached keyboards

    Returns:
        Returns all PIDs associated with keyboard_events
    "
                :arguments 
                  ( ("all_pids" variable nil (reparse-symbol function_parameters) [103 111])
                    ("array_of_keyboard" variable nil (reparse-symbol function_parameters) [112 129]))                  )
                nil [81 997]))          
      :file "pid_using_kbd.py"
      :pointmax 997
      :fsize 996
      :lastmodtime '(25423 58874 839588 363000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-ee26c8"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
os: for listing the directores;
pathlib: for resolving the symbolic path
\"\"\"" code nil nil [1 81])
            ("os" include nil nil [82 91])
            ("pathlib" include nil nil [92 116])
            ("get_all_pids" function (:documentation "Get all running process ids

    Returns:
        list of integers containing process ids
    ") nil [118 316])
            ("print_pid_info" function
               (:documentation "Display information about a process

    Args:
        pid: (integer) ProcessId
    "
                :arguments 
                  ( ("pid" variable nil (reparse-symbol function_parameters) [336 339]))                  )
                nil [317 979]))          
      :file "proc.py"
      :pointmax 979
      :fsize 978
      :lastmodtime '(25423 58884 44587 765000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-ee26e8"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"Importing regular expression for some string parsing\"\"\"" code nil nil [1 59])
            ("re" include nil nil [60 69])
            ("get_kbd_event_numbers" function (:documentation "This fucntion gets kbd event numbers

    Returns:
        List: list of kbd event number as string
    ") nil [71 946]))          
      :file "get_kbd_event.py"
      :pointmax 946
      :fsize 945
      :lastmodtime '(25423 59244 569564 342000)
      :unmatched-syntax nil))
  :file "!home!spd!Programming!Python!Keylogger_Detection!_Final!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
